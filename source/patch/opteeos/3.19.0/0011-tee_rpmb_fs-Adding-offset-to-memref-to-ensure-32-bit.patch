From 572e8224b448fb27f723b5dad1c15418bdb0667b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Timoth=C3=A9e=20Cercueil?= <timothee.cercueil@st.com>
Date: Thu, 6 May 2021 16:30:06 +0200
Subject: [PATCH 11/12] tee_rpmb_fs: Adding offset to memref to ensure 32-bit
 aligment
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Modifying thread_param struct to add the correct offset.
The `struct rpmb_req` with the offset reaches a size modulo 32bits.
As the memory allocation size is already roundup to 32bits, no need
to add the offset as it is calculated to reach a roundup of 32bits.

The RPMB data frame is located after `struct rpmb_req` in memory, its
address needs a 32 bits alignment to be passed to U-Boot RPMB driver.
Adding offset to `struct rpmb_req` fixes this and doesn't break ABI.

Signed-off-by: Timoth√©e Cercueil <timothee.cercueil@st.com>
Change-Id: Ic9b223363ada9044db00a0f30eb80f8898b75181
---
 core/tee/tee_rpmb_fs.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/core/tee/tee_rpmb_fs.c b/core/tee/tee_rpmb_fs.c
index a3586ac2a..f235a59d3 100644
--- a/core/tee/tee_rpmb_fs.c
+++ b/core/tee/tee_rpmb_fs.c
@@ -212,6 +212,9 @@ struct rpmb_req {
 	/* uint8_t data[]; REMOVED! */
 };
 
+#define RPMB_REQ_MEMREF_OFFSET \
+	(ROUNDUP(sizeof(struct rpmb_req), 4) - sizeof(struct rpmb_req))
+
 #define TEE_RPMB_REQ_DATA(req) \
 		((void *)((struct rpmb_req *)(req) + 1))
 
@@ -454,6 +457,8 @@ static TEE_Result tee_rpmb_alloc(size_t req_size, size_t resp_size,
 		goto out;
 	}
 
+	*req = (uint8_t *)*req + RPMB_REQ_MEMREF_OFFSET;
+
 	mem->req_size = req_size;
 	mem->resp_size = resp_size;
 
@@ -466,7 +471,7 @@ out:
 static TEE_Result tee_rpmb_invoke(struct tee_rpmb_mem *mem)
 {
 	struct thread_param params[2] = {
-		[0] = THREAD_PARAM_MEMREF(IN, mem->phreq_mobj, 0,
+		[0] = THREAD_PARAM_MEMREF(IN, mem->phreq_mobj, RPMB_REQ_MEMREF_OFFSET,
 					  mem->req_size),
 		[1] = THREAD_PARAM_MEMREF(OUT, mem->phresp_mobj, 0,
 					  mem->resp_size),
-- 
2.34.1

