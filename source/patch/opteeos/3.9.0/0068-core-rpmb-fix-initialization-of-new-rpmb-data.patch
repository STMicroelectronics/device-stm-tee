From 8682cec67e6936c9f989153c62227cc4efb3f453 Mon Sep 17 00:00:00 2001
From: Etienne Carriere <etienne.carriere@linaro.org>
Date: Fri, 8 Jan 2021 19:23:34 +0100
Subject: [PATCH 09/10] core: rpmb: fix initialization of new rpmb data

Add memset() calls to ensure added object is extended with byte value 0
as specified in GPD TEE specification.

Fixes: 64c6d2917d12 ("core: rpmb fs uses mempool for temporary transfer buffers")
Tested-by: Jerome Forissier <jerome@forissier.org> (QEMU)
Reviewed-by: Jens Wiklander <jens.wiklander@linaro.org>
Signed-off-by: Etienne Carriere <etienne.carriere@linaro.org>
---
 core/tee/tee_rpmb_fs.c | 24 ++++++++++++++++++------
 1 file changed, 18 insertions(+), 6 deletions(-)

diff --git a/core/tee/tee_rpmb_fs.c b/core/tee/tee_rpmb_fs.c
index 1e6b42c..a8dfa2c 100644
--- a/core/tee/tee_rpmb_fs.c
+++ b/core/tee/tee_rpmb_fs.c
@@ -2294,11 +2294,15 @@ static TEE_Result update_write_helper(struct rpmb_file_handle *fh,
 		return TEE_ERROR_OUT_OF_MEMORY;
 
 	while (blk_offset < new_size) {
+		uint8_t *copy_dst = blk_buf;
+		size_t copy_size = 0;
+		size_t rd_size = 0;
+
 		blk_size = MIN(TMP_BLOCK_SIZE, new_size - blk_offset);
 
 		/* Possibly read old RPMB data in temporary buffer */
 		if (blk_offset < pos && blk_offset < old_size) {
-			size_t rd_size = MIN(blk_size, old_size - blk_offset);
+			rd_size = MIN(blk_size, old_size - blk_offset);
 
 			res = tee_rpmb_read(CFG_RPMB_FS_DEV_ID,
 					    old_fat + blk_offset, blk_buf,
@@ -2311,20 +2315,28 @@ static TEE_Result update_write_helper(struct rpmb_file_handle *fh,
 		/* Possibly update data in temporary buffer */
 		if ((blk_offset + TMP_BLOCK_SIZE > pos) &&
 		    (blk_offset < pos + size)) {
-			uint8_t *dst = blk_buf;
-			size_t copy_size = TMP_BLOCK_SIZE;
+			size_t offset = 0;
+
+			copy_dst = blk_buf;
+			copy_size = TMP_BLOCK_SIZE;
 
 			if (blk_offset < pos) {
-				size_t offset = pos - blk_offset;
+				offset = pos - blk_offset;
 
-				dst += offset;
+				copy_dst += offset;
 				copy_size -= offset;
 			}
 			copy_size = MIN(copy_size, rem_size);
 
-			memcpy(dst, rem_buf, copy_size);
+			memcpy(copy_dst, rem_buf, copy_size);
 			rem_buf += copy_size;
 			rem_size -= copy_size;
+
+			/* Extend from read data to copied data with zeros */
+			memset(blk_buf + rd_size, 0, offset - rd_size);
+		} else {
+			/* Extend from read data to block end with zeros */
+			memset(blk_buf + rd_size, 0, blk_size - rd_size);
 		}
 
 		/* Write temporary buffer to new RPMB destination */
-- 
2.17.1

