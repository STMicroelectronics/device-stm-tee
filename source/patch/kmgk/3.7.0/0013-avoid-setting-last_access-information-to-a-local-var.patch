From b458e7cdf432683b9f4158f7d8794daabc94b5d0 Mon Sep 17 00:00:00 2001
From: Nicolas LOUBOUTIN <nicolas.louboutin@st.com>
Date: Wed, 3 Jul 2024 09:44:09 +0200
Subject: [PATCH] avoid setting last_access information to a local variable
 address

Signed-off-by: Nicolas LOUBOUTIN <nicolas.louboutin@st.com>
---
 keymaster/ta/include/operations.h |  2 +-
 keymaster/ta/operations.c         | 22 ++++++++++++----------
 2 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/keymaster/ta/include/operations.h b/keymaster/ta/include/operations.h
index 052a4c9..6748f9b 100644
--- a/keymaster/ta/include/operations.h
+++ b/keymaster/ta/include/operations.h
@@ -43,7 +43,7 @@ typedef struct {
 	keymaster_padding_t padding;
 	keymaster_block_mode_t mode;
 	keymaster_blob_list_item_t *sf_item;/*sign/verify data*/
-	TEE_Time *last_access;
+	TEE_Time last_access;
 	TEE_OperationHandle *operation;
 	TEE_OperationHandle *digest_op;
 	size_t prev_in_size;
diff --git a/keymaster/ta/operations.c b/keymaster/ta/operations.c
index 1d44aa6..371492c 100644
--- a/keymaster/ta/operations.c
+++ b/keymaster/ta/operations.c
@@ -52,7 +52,8 @@ keymaster_error_t TA_abort_operation(
 				TEE_Free(operations[i].key);
 			}
 			operations[i].key = NULL;
-			operations[i].last_access = NULL;
+			operations[i].last_access.seconds = 0;
+			operations[i].last_access.millis = 0;
 			operations[i].min_sec = UNDEFINED;
 			if (*operations[i].operation != TEE_HANDLE_NULL)
 				TEE_FreeOperation(*operations[i].operation);
@@ -100,7 +101,8 @@ void TA_reset_operations_table(void)
 	for (uint32_t i = 0; i < KM_MAX_OPERATION; i++) {
 		operations[i].op_handle = UNDEFINED;
 		operations[i].key = NULL;
-		operations[i].last_access = NULL;
+		operations[i].last_access.seconds = 0;
+		operations[i].last_access.millis = 0;
 		operations[i].min_sec = UNDEFINED;
 		operations[i].operation = TEE_HANDLE_NULL;
 		operations[i].purpose = UNDEFINED;
@@ -133,12 +135,12 @@ keymaster_error_t TA_kill_old_operation(void)
 
 	oldest = operations[0];
 	for (uint32_t i = 1; i < KM_MAX_OPERATION; i++) {
-		if (oldest.last_access->seconds >
-				operations[i].last_access->seconds ||
-				(oldest.last_access->seconds ==
-				operations[i].last_access->seconds &&
-				oldest.last_access->millis >
-				operations[i].last_access->millis)) {
+		if (oldest.last_access.seconds >
+				operations[i].last_access.seconds ||
+				(oldest.last_access.seconds ==
+				operations[i].last_access.seconds &&
+				oldest.last_access.millis >
+				operations[i].last_access.millis)) {
 			oldest = operations[i];
 		}
 	}
@@ -187,7 +189,7 @@ keymaster_error_t TA_try_start_operation(
 			TEE_MemMove(operations[i].key->key_material,
 						key.key_material,
 						key.key_material_size);
-			operations[i].last_access = &cur_t;
+			operations[i].last_access = cur_t;
 			operations[i].min_sec = min_sec;
 			operations[i].operation = operation;
 			operations[i].purpose = purpose;
@@ -261,7 +263,7 @@ keymaster_error_t TA_get_operation(const keymaster_operation_handle_t op_handle,
 	for (uint32_t i = 0; i < KM_MAX_OPERATION; i++) {
 		if (op_handle == operations[i].op_handle) {
 			TEE_GetSystemTime(&cur_t);
-			operations[i].last_access = &cur_t;
+			operations[i].last_access = cur_t;
 			res = KM_ERROR_OK;
 			*operation = operations[i];
 			break;
-- 
2.34.1

